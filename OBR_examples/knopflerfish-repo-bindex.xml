<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="knopflerfish-repo-bindex_files/obr2html.xml" type="text/xsl"?><repository lastmodified="20090911023450.059" name="Knopflerfish bundle repository - 2.3.3">
  <resource id="org.knopflerfish.bundle.axis-osgi/0.1.0" presentationname="axis-osgi" symbolicname="org.knopflerfish.bundle.axis-osgi" uri="http://www.knopflerfish.org/repo/jars/axis-osgi/axis-osgi_all-0.1.0.jar" version="0.1.0">
    <description>
      Axis Server
    </description>
    <size>
      1360715
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/soap/axis.html
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="axis-osgi"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.axis-osgi"/>
      <p n="version" t="version" v="0.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.axis"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.rpc.handler.soap,javax.xml.soap,org.apache.axis.client,org.apache.axis.description,org.apache.axis.encoding,org.apache.axis.enum,org.apache.axis.soap,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.wsdl"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.rpc,org.apache.axis.encoding,org.apache.axis.enum,org.apache.axis.utils"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.types"/>
      <p n="uses" v="javax.xml.namespace,org.apache.axis,org.apache.axis.description,org.apache.axis.encoding,org.apache.axis.utils"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.soap"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.soap,org.apache.axis,org.apache.axis.client,org.apache.axis.utils"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.client"/>
      <p n="uses" v="javax.wsdl,javax.xml.namespace,javax.xml.rpc,javax.xml.rpc.handler,javax.xml.rpc.holders,org.apache.axis,org.apache.axis.configuration,org.apache.axis.description,org.apache.axis.encoding,org.apache.axis.enum,org.apache.axis.soap,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.rpc"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.rpc.handler"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl"/>
      <p n="uses" v="javax.wsdl.extensions,javax.xml.namespace"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions"/>
      <p n="uses" v="javax.wsdl,javax.xml.namespace"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.factory"/>
      <p n="uses" v="javax.wsdl,javax.wsdl.extensions,javax.wsdl.xml"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.xml"/>
      <p n="uses" v="javax.wsdl,javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.namespace"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.soap"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.rpc.handler"/>
      <p n="uses" v="javax.xml.namespace"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.rpc.handler.soap"/>
      <p n="uses" v="javax.xml.rpc.handler,javax.xml.soap"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.rpc.holders"/>
      <p n="uses" v="javax.xml.namespace"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.description"/>
      <p n="uses" v="javax.xml.namespace,org.apache.axis,org.apache.axis.encoding,org.apache.axis.enum,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.encoding"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.rpc,javax.xml.rpc.holders,javax.xml.soap,org.apache.axis,org.apache.axis.description,org.apache.axis.enum,org.apache.axis.soap,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.enum"/>
      <p n="uses" v="javax.xml.namespace,org.apache.axis,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.utils"/>
      <p n="uses" v="javax.wsdl,javax.wsdl.extensions,javax.xml.namespace,javax.xml.rpc.holders,javax.xml.soap,org.apache.axis,org.apache.axis.client,org.apache.axis.description,org.apache.axis.encoding,org.apache.axis.types,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis.configuration"/>
      <p n="uses" v="javax.servlet,javax.xml.namespace,org.apache.axis,org.apache.axis.description,org.apache.axis.encoding,org.apache.axis.utils,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.axis)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.axis
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.client
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.configuration)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.configuration
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.description)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.description
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.encoding)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.encoding
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.enum)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.enum
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.soap
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.types)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.types
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.utils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.utils
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.wsdl
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc.handler
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc.handler.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc.handler.soap
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc.holders)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc.holders
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.soap
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.factory
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.xml
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.axis2-osgi/1.3.0" presentationname="axis2-osgi" symbolicname="org.knopflerfish.bundle.axis2-osgi" uri="http://www.knopflerfish.org/repo/jars/axis2-osgi/axis2-osgi_all-1.3.jar" version="1.3.0">
    <description>
      Axis2 Server
    </description>
    <size>
      7931328
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="axis2-osgi"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.axis2-osgi"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.axis2"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="edu.emory.mathcs.backport.java.util"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util.concurrent.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="edu.emory.mathcs.backport.java.util.concurrent"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util,edu.emory.mathcs.backport.java.util.concurrent.atomic,edu.emory.mathcs.backport.java.util.concurrent.helpers,edu.emory.mathcs.backport.java.util.concurrent.locks"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="edu.emory.mathcs.backport.java.util.concurrent.atomic"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="edu.emory.mathcs.backport.java.util.concurrent.helpers"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util,edu.emory.mathcs.backport.java.util.concurrent,edu.emory.mathcs.backport.java.util.concurrent.locks"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="edu.emory.mathcs.backport.java.util.concurrent.locks"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util.concurrent,edu.emory.mathcs.backport.java.util.concurrent.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.mail"/>
      <p n="uses" v="javax.mail.event,javax.mail.search"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.mail.event"/>
      <p n="uses" v="javax.mail"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.mail.internet"/>
      <p n="uses" v="javax.mail,javax.mail.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.mail.search"/>
      <p n="uses" v="javax.mail,javax.mail.internet"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.mail.util"/>
      <p n="uses" v="javax.mail.internet"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions.http"/>
      <p n="uses" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions.mime"/>
      <p n="uses" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions.schema"/>
      <p n="uses" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions.soap"/>
      <p n="uses" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.extensions.soap12"/>
      <p n="uses" v="javax.wsdl.extensions"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.factory"/>
      <p n="uses" v="javax.wsdl.extensions,javax.wsdl.xml"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.wsdl.xml"/>
      <p n="uses" v="javax.wsdl.extensions,org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.soap"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.dom"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.stream"/>
      <p n="uses" v="javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.stream.events"/>
      <p n="uses" v="javax.xml.stream"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.stream.util"/>
      <p n="uses" v="javax.xml.stream,javax.xml.stream.events"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.attachments"/>
      <p n="uses" v="javax.mail,javax.mail.internet,org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.attachments.utils"/>
      <p n="uses" v="org.apache.axiom.attachments,org.apache.axiom.om.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.om"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om.util,org.apache.axiom.soap"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.om.impl.llom"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.om.util"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.xpath,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.om.xpath"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axiom.soap"/>
      <p n="uses" v="org.apache.axiom.om"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2"/>
      <p n="uses" v="org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2.context,org.apache.axis2.description"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.addressing"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.client"/>
      <p n="uses" v="org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client.async,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.util,org.apache.commons.httpclient,org.apache.commons.logging,org.apache.neethi"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.client.async"/>
      <p n="uses" v="org.apache.axiom.soap,org.apache.axis2.context"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.context"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.attachments,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.util,org.apache.commons.logging,org.apache.neethi"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2.databinding.utils.reader,org.apache.axis2.databinding.utils.writer,org.apache.axis2.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.i18n"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.typemapping"/>
      <p n="uses" v="org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axis2.databinding.types,org.apache.axis2.databinding.utils"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.types"/>
      <p n="uses" v="javax.xml.stream,org.apache.axis2.databinding.utils,org.apache.axis2.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.utils"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.attachments,org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.databinding.i18n,org.apache.axis2.databinding.typemapping,org.apache.axis2.databinding.types,org.apache.axis2.databinding.utils.reader,org.apache.axis2.engine,org.apache.axis2.util,org.codehaus.jam"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.utils.reader"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axis2.databinding,org.apache.axis2.databinding.utils,org.apache.axis2.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.databinding.utils.writer"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.impl.llom"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.description"/>
      <p n="uses" v="javax.wsdl.extensions,javax.wsdl.extensions.http,javax.wsdl.extensions.mime,javax.wsdl.extensions.schema,javax.wsdl.extensions.soap,javax.wsdl.extensions.soap12,javax.wsdl.factory,javax.wsdl.xml,javax.xml.parsers,javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.client.async,org.apache.axis2.context,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging,org.apache.neethi,org.apache.ws.commons.schema,org.apache.ws.commons.schema.resolver,org.apache.ws.commons.schema.utils,org.codehaus.jam,org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.engine"/>
      <p n="uses" v="org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client.async,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.transport,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.rpc.receivers"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.context,org.apache.axis2.databinding.typemapping,org.apache.axis2.databinding.utils,org.apache.axis2.databinding.utils.reader,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.rpc.receivers.ejb"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util.concurrent,javax.rmi,org.apache.axis2,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.rpc.receivers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.stream,org.apache.axiom.attachments,org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport.http"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util.concurrent,javax.servlet,javax.servlet.http,javax.xml.parsers,javax.xml.stream,org.apache.axiom.attachments,org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.util,org.apache.commons.fileupload,org.apache.commons.fileupload.disk,org.apache.commons.fileupload.servlet,org.apache.commons.httpclient,org.apache.commons.httpclient.auth,org.apache.commons.httpclient.methods,org.apache.commons.httpclient.methods.multipart,org.apache.commons.httpclient.params,org.apache.commons.httpclient.protocol,org.apache.commons.logging,org.apache.neethi,org.apache.ws.commons.schema"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport.local"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport.mail"/>
      <p n="uses" v="edu.emory.mathcs.backport.java.util.concurrent,javax.mail,javax.mail.internet,javax.xml.stream,org.apache.axiom.attachments,org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport.nhttp"/>
      <p n="uses" v="javax.net.ssl,javax.security.auth.x500,javax.xml.stream,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging,org.apache.ws.commons.schema"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.transport.tcp"/>
      <p n="uses" v="org.apache.axiom.om,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.axis2.transport.http,org.apache.axis2.util,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.axis2.util"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.stream,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.stream,org.apache.axiom.attachments.utils,org.apache.axiom.om,org.apache.axiom.om.util,org.apache.axiom.soap,org.apache.axis2,org.apache.axis2.addressing,org.apache.axis2.client,org.apache.axis2.client.async,org.apache.axis2.context,org.apache.axis2.description,org.apache.axis2.engine,org.apache.axis2.transport,org.apache.commons.logging,org.apache.neethi,org.apache.ws.commons.schema,org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.fileupload"/>
      <p n="uses" v="javax.servlet.http,org.apache.commons.fileupload.disk,org.apache.commons.fileupload.servlet"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.fileupload.disk"/>
      <p n="uses" v="org.apache.commons.fileupload"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.fileupload.portlet"/>
      <p n="uses" v="org.apache.commons.fileupload"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.fileupload.servlet"/>
      <p n="uses" v="javax.servlet,javax.servlet.http,org.apache.commons.fileupload"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient"/>
      <p n="uses" v="org.apache.commons.httpclient.auth,org.apache.commons.httpclient.cookie,org.apache.commons.httpclient.params,org.apache.commons.httpclient.protocol,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.auth"/>
      <p n="uses" v="javax.crypto,javax.crypto.spec,org.apache.commons.httpclient,org.apache.commons.httpclient.params,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.cookie"/>
      <p n="uses" v="org.apache.commons.httpclient,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.methods"/>
      <p n="uses" v="org.apache.commons.httpclient,org.apache.commons.httpclient.methods.multipart,org.apache.commons.httpclient.params,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.methods.multipart"/>
      <p n="uses" v="org.apache.commons.httpclient.methods,org.apache.commons.httpclient.params,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.params"/>
      <p n="uses" v="org.apache.commons.httpclient,org.apache.commons.logging"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.httpclient.protocol"/>
      <p n="uses" v="javax.net,javax.net.ssl,org.apache.commons.httpclient,org.apache.commons.httpclient.params"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.neethi"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.neethi.builders,org.apache.neethi.builders.xml,org.apache.neethi.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.neethi.builders"/>
      <p n="uses" v="org.apache.axiom.om,org.apache.neethi"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.neethi.builders.xml"/>
      <p n="uses" v="javax.xml.stream,org.apache.axiom.om,org.apache.neethi,org.apache.neethi.builders"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.neethi.util"/>
      <p n="uses" v="org.apache.neethi"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.ws.commons.schema"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream,org.apache.ws.commons.schema.constants,org.apache.ws.commons.schema.extensions,org.apache.ws.commons.schema.resolver,org.apache.ws.commons.schema.utils,org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.ws.commons.schema.constants"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.ws.commons.schema.extensions"/>
      <p n="uses" v="org.apache.ws.commons.schema"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.ws.commons.schema.resolver"/>
      <p n="uses" v="org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.ws.commons.schema.utils"/>
      <p n="uses" v="org.apache.ws.commons.schema"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.annogen.generate"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.provider"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.annogen.override"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.provider"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.annogen.view"/>
      <p n="uses" v="org.codehaus.annogen.override,org.codehaus.jam"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam"/>
      <p n="uses" v="org.codehaus.jam.annotation,org.codehaus.jam.provider,org.codehaus.jam.visitor"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam.annotation"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.mutable,org.codehaus.jam.provider"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam.mutable"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.visitor"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam.provider"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.annotation,org.codehaus.jam.mutable,org.codehaus.jam.visitor"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam.visitor"/>
      <p n="uses" v="org.codehaus.jam,org.codehaus.jam.mutable"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.codehaus.jam.xml"/>
      <p n="uses" v="javax.xml.stream,org.codehaus.jam,org.codehaus.jam.mutable,org.codehaus.jam.provider"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.axis2)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.axis2
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.jaxp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.jaxp
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xalan.processor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xalan.processor
    </require>
    <require extend="false" filter="(&amp;(package=javax.crypto)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.crypto
    </require>
    <require extend="false" filter="(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.crypto.spec
    </require>
    <require extend="false" filter="(&amp;(package=javax.net)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.net
    </require>
    <require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.net.ssl
    </require>
    <require extend="false" filter="(&amp;(package=javax.rmi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.rmi
    </require>
    <require extend="false" filter="(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.security.auth.callback
    </require>
    <require extend="false" filter="(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.security.auth.x500
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=javax.transaction.xa)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.transaction.xa
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package edu.emory.mathcs.backport.java.util
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package edu.emory.mathcs.backport.java.util.concurrent
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent.atomic)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package edu.emory.mathcs.backport.java.util.concurrent.atomic
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package edu.emory.mathcs.backport.java.util.concurrent.helpers
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent.locks)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package edu.emory.mathcs.backport.java.util.concurrent.locks
    </require>
    <require extend="false" filter="(&amp;(package=javax.mail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.mail
    </require>
    <require extend="false" filter="(&amp;(package=javax.mail.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.mail.event
    </require>
    <require extend="false" filter="(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.mail.internet
    </require>
    <require extend="false" filter="(&amp;(package=javax.mail.search)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.mail.search
    </require>
    <require extend="false" filter="(&amp;(package=javax.mail.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.mail.util
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions.http
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions.mime)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions.mime
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions.schema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions.schema
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions.soap
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap12)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions.soap12
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.factory
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.xml
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.datatype
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.soap
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.stream
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.stream.events
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.stream.util
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.dom
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.sax
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.stream
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.validation
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.attachments)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.attachments
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.attachments.utils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.attachments.utils
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.om)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.om
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.om.impl.llom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.om.impl.llom
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.om.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.om.util
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.om.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.om.xpath
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axiom.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axiom.soap
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.addressing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.addressing
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.client
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.client.async)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.client.async
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.context
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.i18n)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.i18n
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.typemapping)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.typemapping
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.types)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.types
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.utils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.utils
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.utils.reader)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.utils.reader
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.databinding.utils.writer)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.databinding.utils.writer
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.description)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.description
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.engine)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.engine
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.rpc.receivers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.rpc.receivers
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.rpc.receivers.ejb)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.rpc.receivers.ejb
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport.http
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport.local)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport.local
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport.mail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport.mail
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport.nhttp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport.nhttp
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.transport.tcp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.transport.tcp
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis2.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis2.util
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.fileupload)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.fileupload
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.fileupload.disk)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.fileupload.disk
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.fileupload.portlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.fileupload.portlet
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.fileupload.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.fileupload.servlet
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.auth
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.cookie)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.cookie
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.methods.multipart)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.methods.multipart
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.protocol)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.httpclient.protocol
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.neethi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.neethi
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.neethi.builders)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.neethi.builders
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.neethi.builders.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.neethi.builders.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.neethi.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.neethi.util
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.parsers
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.serialize
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.ws.commons.schema
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.constants)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.ws.commons.schema.constants
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.ws.commons.schema.extensions
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.resolver)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.ws.commons.schema.resolver
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.utils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.ws.commons.schema.utils
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.annogen.generate)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.annogen.generate
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.annogen.override)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.annogen.override
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.annogen.view)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.annogen.view
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam.annotation
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam.mutable)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam.mutable
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam.provider)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam.provider
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam.visitor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam.visitor
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.jam.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.codehaus.jam.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.web.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.web.context
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.web.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.web.context.support
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax ;version=2.0.2
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.ext ;version=2.0.2
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.helpers ;version=2.0.2
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.basicdriverlocator-IMPL/2.0.1" presentationname="basicdriverlocator-IMPL" symbolicname="org.knopflerfish.bundle.basicdriverlocator-IMPL" uri="http://www.knopflerfish.org/repo/jars/basicdriverlocator/basicdriverlocator-2.0.1.jar" version="2.0.1">
    <description>
      Basic device driver locator (IMPL)
    </description>
    <size>
      6869
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="basicdriverlocator-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.basicdriverlocator-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.device)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.device
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.bundlerepository/2.0.3" presentationname="bundlerepository" symbolicname="org.knopflerfish.bundle.bundlerepository" uri="http://www.knopflerfish.org/repo/jars/bundlerepository/bundlerepository_all-2.0.3.jar" version="2.0.3">
    <description>
      OBR bundle repository using the KF console and desktop
    </description>
    <size>
      166131
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/bundlerepository/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="bundlerepository"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.bundlerepository"/>
      <p n="version" t="version" v="2.0.3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.console"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ungoverned.osgi.service.bundlerepository"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.ungoverned.osgi.service.shell
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.ungoverned.osgi.service.bundlerepository)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.ungoverned.osgi.service.bundlerepository
       ;version=1.1.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.event
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.tree
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.cm/2.0.1" presentationname="cm" symbolicname="org.knopflerfish.bundle.cm" uri="http://www.knopflerfish.org/repo/jars/cm/cm_all-2.0.1.jar" version="2.0.1">
    <description>
      Configuration management service
    </description>
    <size>
      62947
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="service">
      <p n="service" v="org.osgi.service.cm.ConfigurationAdmin"/>
    </capability>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="cm"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.cm"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.cm"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.shared.cm"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(service=org.knopflerfish.service.log.LogService)" multiple="true" name="service" optional="false">
      Import Service org.knopflerfish.service.log.LogService
    </require>
    <require extend="false" filter="(service=org.osgi.service.cm.ManagedService)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.cm.ManagedService
    </require>
    <require extend="false" filter="(service=org.osgi.service.cm.ManagedServiceFactory)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.cm.ManagedServiceFactory
    </require>
    <require extend="false" filter="(service=org.osgi.service.cm.ConfigurationPlugin)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.cm.ConfigurationPlugin
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.shared.cm ;version=1.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.cm_cmd-IMPL/2.0.0" presentationname="CM-Commands-IMPL" symbolicname="org.knopflerfish.bundle.cm_cmd-IMPL" uri="http://www.knopflerfish.org/repo/jars/cm_cmd/cm_cmd-2.0.0.jar" version="2.0.0">
    <description>
      Commands for the CM service (IMPL)
    </description>
    <size>
      16754
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="CM-Commands-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.cm_cmd-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.shared.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.sort)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.sort
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.cm_desktop-IMPL/2.0.1" presentationname="CM-Desktop-IMPL" symbolicname="org.knopflerfish.bundle.cm_desktop-IMPL" uri="http://www.knopflerfish.org/repo/jars/cm_desktop/cm_desktop-2.0.1.jar" version="2.0.1">
    <description>
      CM desktop plugin (IMPL)
    </description>
    <size>
      49920
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/metatype/cm_desktop/readme.html
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="CM-Desktop-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.cm_desktop-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.metatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.metatype
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.metatype
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.event
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.table)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.table
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.border)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.border
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.comm-linux/2.0.0" presentationname="comm-linux" symbolicname="org.knopflerfish.bundle.comm-linux" uri="http://www.knopflerfish.org/repo/jars/comm-linux/comm-linux_all-2.0.0.jar" version="2.0.0">
    <description>
      Native driver for linux javax.comm using the RXTX library.
       Note that this bundle is LGPL and contains full source to
       rxtx
    </description>
    <size>
      119627
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/serial/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="comm-linux"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.comm-linux"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.comm"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="gnu.io"/>
      <p n="uses" v="javax.comm"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=javax.comm)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package javax.comm ;version=2.0.0
    </require>
    <require extend="false" filter="(&amp;(package=gnu.io)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package gnu.io ;version=2.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.comm-win32/2.0.1" presentationname="comm-win32" symbolicname="org.knopflerfish.bundle.comm-win32" uri="http://www.knopflerfish.org/repo/jars/comm-win32/comm-win32_all-2.0.1.jar" version="2.0.1">
    <description>
      Native driver for win32 javax.comm using Sun's COMM library
    </description>
    <size>
      38730
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/serial/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="comm-win32"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.comm-win32"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.comm"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=javax.comm)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package javax.comm ;version=2.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.commons-logging/2.0.0" presentationname="Commons-Logging" symbolicname="org.knopflerfish.bundle.commons-logging" uri="http://www.knopflerfish.org/repo/jars/commons-logging/commons-logging_all-2.0.0.jar" version="2.0.0">
    <description>
      Apache Commons logging. Publishced under Apache License. See
       http://www.apache.org/licenses/LICENSE-2.0
    </description>
    <size>
      36696
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/commons-logging/readme.txt
    </documentation>
    <category id="lib"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Commons-Logging"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.commons-logging"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.log"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.log"/>
      <p n="uses" v="org.osgi.framework,org.osgi.service.log"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.commons.logging"/>
      <p n="version" t="version" v="1.0.3"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log ;version=1.1.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.3))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging ;version=1.0.3
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.component/2.0.1" presentationname="Declarative-Services" symbolicname="org.knopflerfish.bundle.component" uri="http://www.knopflerfish.org/repo/jars/component/component_all-2.0.1.jar" version="2.0.1">
    <description>
      Declarative Services
    </description>
    <size>
      94237
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Declarative-Services"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.component"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.component"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.component)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.component
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.connectors-IMPL/2.0.1" presentationname="Connection-Factories-IMPL" symbolicname="org.knopflerfish.bundle.connectors-IMPL" uri="http://www.knopflerfish.org/repo/jars/connectors/connectors-2.0.1.jar" version="2.0.1">
    <description>
      OSGi IO http, socket and datagram-receive Connectors (IMPL)
    </description>
    <size>
      17814
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Connection-Factories-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.connectors-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.microedition.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.microedition.io
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.io
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.console/2.0.1" presentationname="Console" symbolicname="org.knopflerfish.bundle.console" uri="http://www.knopflerfish.org/repo/jars/console/console_all-2.0.1.jar" version="2.0.1">
    <description>
      Service system console
    </description>
    <size>
      36347
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/console/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="service">
      <p n="service" v="org.knopflerfish.service.console.ConsoleService"/>
    </capability>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Console"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.console"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.console"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(service=org.knopflerfish.service.console.CommandGroup)" multiple="true" name="service" optional="false">
      Import Service org.knopflerfish.service.console.CommandGroup
    </require>
    <require extend="false" filter="(service=org.osgi.service.log.LogService)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.log.LogService
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.consoletcp-IMPL/2.0.0" presentationname="TCP-Console-IMPL" symbolicname="org.knopflerfish.bundle.consoletcp-IMPL" uri="http://www.knopflerfish.org/repo/jars/consoletcp/consoletcp-2.0.0.jar" version="2.0.0">
    <description>
      TCP console (IMPL)
    </description>
    <size>
      11935
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="console"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="TCP-Console-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.consoletcp-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.um.useradmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.useradmin
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.consoletelnet-IMPL/2.0.2" presentationname="Telnet-Console-IMPL" symbolicname="org.knopflerfish.bundle.consoletelnet-IMPL" uri="http://www.knopflerfish.org/repo/jars/consoletelnet/consoletelnet-2.0.2.jar" version="2.0.2">
    <description>
      Telnet console (IMPL)
    </description>
    <size>
      29693
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/console/consoletelnet/readme.txt
    </documentation>
    <category id="console"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Telnet-Console-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.consoletelnet-IMPL"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.useradmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.um.useradmin
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.consoletty-IMPL/2.0.1" presentationname="TTY-Console-IMPL" symbolicname="org.knopflerfish.bundle.consoletty-IMPL" uri="http://www.knopflerfish.org/repo/jars/consoletty/consoletty-2.0.1.jar" version="2.0.1">
    <description>
      Command line system console (IMPL)
    </description>
    <size>
      6172
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="console"/>
    <capability name="service">
      <p n="service" v="org.osgi.service.cm.ManagedService"/>
    </capability>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="TTY-Console-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.consoletty-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(service=org.osgi.service.log.LogService)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.log.LogService
    </require>
    <require extend="false" filter="(service=org.knopflerfish.service.console.ConsoleService)" multiple="true" name="service" optional="false">
      Import Service org.knopflerfish.service.console.ConsoleService
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.crimson/2.0.1" presentationname="Crimson-XML" symbolicname="org.knopflerfish.bundle.crimson" uri="http://www.knopflerfish.org/repo/jars/crimson/crimson-2.0.1.jar" version="2.0.1">
    <description>
      The Crimson XML parser
    </description>
    <size>
      196976
    </size>
    <documentation>
      http://xml.apache.org/crimson
    </documentation>
    <category id="lib"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Crimson-XML"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.crimson"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax.helpers"/>
      <p n="uses" v="org.xml.sax"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.parsers"/>
      <p n="uses" v="org.w3c.dom,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.crimson.jaxp"/>
      <p n="uses" v="javax.xml.parsers,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax.ext"/>
      <p n="uses" v="org.xml.sax"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom ;version=2.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax ;version=2.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.helpers ;version=2.0.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.crimson.jaxp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.crimson.jaxp
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.ext ;version=1.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.demo1/2.0.0" presentationname="demo1" symbolicname="org.knopflerfish.bundle.demo1" uri="http://www.knopflerfish.org/repo/jars/demo1/demo1_all-2.0.0.jar" version="2.0.0">
    <description>
      Demo bundle
    </description>
    <size>
      5403
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="example"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="demo1"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.demo1"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.demo1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.demo1)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.demo1
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.demo1client-IMPL/2.0.0" presentationname="demo1client-IMPL" symbolicname="org.knopflerfish.bundle.demo1client-IMPL" uri="http://www.knopflerfish.org/repo/jars/demo1client/demo1client-2.0.0.jar" version="2.0.0">
    <description>
      Demo client bundle (IMPL)
    </description>
    <size>
      4000
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="example"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="demo1client-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.demo1client-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.demo1)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.demo1
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.desktop/2.3.11" presentationname="Desktop" symbolicname="org.knopflerfish.bundle.desktop" uri="http://www.knopflerfish.org/repo/jars/desktop/desktop_all-2.3.11.jar" version="2.3.11">
    <description>
      Swing framework desktop
    </description>
    <size>
      776192
    </size>
    <documentation>
      http://www.knopflerfish.org/desktop.html
    </documentation>
    <category id="console"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Desktop"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.desktop"/>
      <p n="version" t="version" v="2.3.11"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.desktop"/>
      <p n="uses" v="javax.swing,org.osgi.framework"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.remotefw"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.log"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.log"/>
      <p n="uses" v="org.osgi.framework,org.osgi.service.log"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.console"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.sort"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.workerthread"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.framework"/>
      <p n="uses" v="org.knopflerfish.util,org.osgi.framework"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.cm"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.event"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.prefs"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin ;version=1.1.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.event)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.event ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.prefs ;version=1.1.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.desktop ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log ;version=1.1.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.remotefw)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.remotefw
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.border)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.border
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.event
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.filechooser
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.plaf
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.plaf.basic
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.plaf.metal)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.plaf.metal
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.table)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.table
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.tree
    </require>
    <require extend="false" filter="(&amp;(package=javax.accessibility)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.accessibility
    </require>
    <require extend="false" filter="(&amp;(package=com.apple.eawt)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package com.apple.eawt
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.sort)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.sort
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.workerthread)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.workerthread
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm ;version=1.2.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.desktop_jvm-IMPL/1.0.0" presentationname="desktop_jvm-IMPL" symbolicname="org.knopflerfish.bundle.desktop_jvm-IMPL" uri="http://www.knopflerfish.org/repo/jars/desktop_jvm/desktop_jvm-1.0.0.jar" version="1.0.0">
    <description>
      JVM info desktop plugin (IMPL)
    </description>
    <size>
      14191
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="desktop_jvm-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.desktop_jvm-IMPL"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.border)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.border
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.device/2.0.0" presentationname="Device-Manager" symbolicname="org.knopflerfish.bundle.device" uri="http://www.knopflerfish.org/repo/jars/device/device_all-2.0.0.jar" version="2.0.0">
    <description>
      Device manager
    </description>
    <size>
      16192
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Device-Manager"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.device"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.device"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.device)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.device
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.dirdeployer/2.0.0" presentationname="Directory-Deployer" symbolicname="org.knopflerfish.bundle.dirdeployer" uri="http://www.knopflerfish.org/repo/jars/dirdeployer/dirdeployer_all-2.0.0.jar" version="2.0.0">
    <description>
      Monitors a file system directory for bundles to deploy
    </description>
    <size>
      12615
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/dirdeployer/readme.html
    </documentation>
    <category id="example"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Directory-Deployer"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.dirdeployer"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.dirdeployer"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.dirdeployer)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.dirdeployer
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.event/2.0.4" presentationname="Event-Admin" symbolicname="org.knopflerfish.bundle.event" uri="http://www.knopflerfish.org/repo/jars/event/event_all-2.0.4.jar" version="2.0.4">
    <description>
      Event Admin
    </description>
    <size>
      26048
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Event-Admin"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.event"/>
      <p n="version" t="version" v="2.0.4"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.event"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.event)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.event ;version=1.1.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.frameworkcommands-IMPL/2.0.5" presentationname="FW-Commands-IMPL" symbolicname="org.knopflerfish.bundle.frameworkcommands-IMPL" uri="http://www.knopflerfish.org/repo/jars/frameworkcommands/frameworkcommands-2.0.5.jar" version="2.0.5">
    <description>
      Framework commands (IMPL)
    </description>
    <size>
      27989
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="FW-Commands-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.frameworkcommands-IMPL"/>
      <p n="version" t="version" v="2.0.5"/>
    </capability>
    <require extend="false" filter="(service=org.osgi.service.log.LogService)" multiple="true" name="service" optional="false">
      Import Service org.osgi.service.log.LogService
    </require>
    <require extend="false" filter="(service=org.knopflerfish.service.console.ConsoleService)" multiple="true" name="service" optional="false">
      Import Service org.knopflerfish.service.console.ConsoleService
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.permissionadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.permissionadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.condpermadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.condpermadmin
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.http/2.1.4" presentationname="HTTP-Server" symbolicname="org.knopflerfish.bundle.http" uri="http://www.knopflerfish.org/repo/jars/http/http_all-2.1.4.jar" version="2.1.4">
    <description>
      HTTP/HTTPS Server
    </description>
    <size>
      95152
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/current/docs/bundledoc/index.html?docpage=http
    </documentation>
    <category id="service"/>
    <capability name="service">
      <p n="service" v="org.osgi.service.http.HttpService"/>
    </capability>
    <capability name="service">
      <p n="service" v="org.osgi.service.cm.ManagedServiceFactory"/>
    </capability>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="HTTP-Server"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.http"/>
      <p n="version" t="version" v="2.1.4"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.http"/>
      <p n="uses" v="javax.servlet,javax.servlet.http"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=2.3.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet ;version=2.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=2.3.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http ;version=2.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.httpconsole-IMPL/2.0.1" presentationname="httpconsole-IMPL" symbolicname="org.knopflerfish.bundle.httpconsole-IMPL" uri="http://www.knopflerfish.org/repo/jars/httpconsole/httpconsole-2.0.1.jar" version="2.0.1">
    <size>
      64812
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="httpconsole-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.httpconsole-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.httproot-IMPL/2.0.1" presentationname="HTTP-root-IMPL" symbolicname="org.knopflerfish.bundle.httproot-IMPL" uri="http://www.knopflerfish.org/repo/jars/httproot/httproot-2.0.1.jar" version="2.0.1">
    <description>
      Demo HTTP root servlet (IMPL)
    </description>
    <size>
      8626
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="example"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="HTTP-root-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.httproot-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.io/2.0.0" presentationname="io" symbolicname="org.knopflerfish.bundle.io" uri="http://www.knopflerfish.org/repo/jars/io/io_all-2.0.0.jar" version="2.0.0">
    <description>
      IO
    </description>
    <size>
      12565
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="io"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.io"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.io"/>
      <p n="uses" v="javax.microedition.io"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.microedition.io"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.io)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.io ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.microedition.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.microedition.io
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.jinidriver/0.1.0" presentationname="Jini-Driver" symbolicname="org.knopflerfish.bundle.jinidriver" uri="http://www.knopflerfish.org/repo/jars/jinidriver/jinidriver_all-0.1.0.jar" version="0.1.0">
    <description>
      Jini driver (experimental) using Sun's jini impl. jini-core.jar
       and jini-ext.jar, see http://wwws.sun.com/software/jini/licensing/SCSL3_JiniTSA1.html
    </description>
    <size>
      204888
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Jini-Driver"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.jinidriver"/>
      <p n="version" t="version" v="0.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.core.lookup"/>
      <p n="uses" v="net.jini.core.discovery,net.jini.core.entry,net.jini.core.event,net.jini.core.lease"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.core.entry"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.core.event"/>
      <p n="uses" v="net.jini.core.lease"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.core.lease"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.core.discovery"/>
      <p n="uses" v="net.jini.core.lookup"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.admin"/>
      <p n="uses" v="net.jini.core.discovery,net.jini.core.entry"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.discovery"/>
      <p n="uses" v="net.jini.core.discovery,net.jini.core.event,net.jini.core.lease,net.jini.core.lookup"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.lookup"/>
      <p n="uses" v="net.jini.core.discovery,net.jini.core.entry,net.jini.core.event,net.jini.core.lease,net.jini.core.lookup,net.jini.discovery,net.jini.lease"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.lookup.entry"/>
      <p n="uses" v="net.jini.core.entry"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.jini.lease"/>
      <p n="uses" v="net.jini.core.event,net.jini.core.lease"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.jini"/>
      <p n="uses" v="net.jini.core.lookup"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.core.lookup)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.core.lookup
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.core.entry)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.core.entry
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.core.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.core.event
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.core.lease)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.core.lease
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.core.discovery)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.core.discovery
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.admin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.admin
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.discovery)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.discovery
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.lookup)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.lookup
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.lookup.entry)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.lookup.entry
    </require>
    <require extend="false" filter="(&amp;(package=net.jini.lease)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package net.jini.lease
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.jini)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.jini ;version=1.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.junit/2.1.0" presentationname="JUnit" symbolicname="org.knopflerfish.bundle.junit" uri="http://www.knopflerfish.org/repo/jars/junit/junit_all-2.1.0.jar" version="2.1.0">
    <description>
      JUnit support
    </description>
    <size>
      145763
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/current/docs/bundledoc/index.html?docpage=junit
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="JUnit"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.junit"/>
      <p n="version" t="version" v="2.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.junit"/>
      <p n="uses" v="junit.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="junit.framework"/>
      <p n="version" t="version" v="3.8.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.border)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.border
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.event
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.text)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.text
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.swing.tree
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.xml.parsers
    </require>
    <require extend="false" filter="(&amp;(package=junit.framework)(version&gt;=3.8.1))" multiple="false" name="package" optional="false">
      Import package junit.framework ;version=3.8.1
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.junit)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.junit ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.junit_runner/2.1.0" presentationname="JUnitRunner" symbolicname="org.knopflerfish.bundle.junit_runner" uri="http://www.knopflerfish.org/repo/jars/junit_runner/junit_runner_all-2.1.0.jar" version="2.1.0">
    <description>
      Grunt, the JUnit test runner. Runs JUnit tests registered in
       the framework and dumps results to XML files.
    </description>
    <size>
      12125
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/junit/junit_runner/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="JUnitRunner"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.junit_runner"/>
      <p n="version" t="version" v="2.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.junit)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.junit
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=junit.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package junit.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.kf_metatype/2.0.3" presentationname="KF-XML-Metatype" symbolicname="org.knopflerfish.bundle.kf_metatype" uri="http://www.knopflerfish.org/repo/jars/kf_metatype/kf_metatype_all-2.0.3.jar" version="2.0.3">
    <description>
      XML format support for CM and Metatype
    </description>
    <size>
      98066
    </size>
    <documentation>
      http://www.knopflerfish.org/XMLMetatype/
    </documentation>
    <category id="util"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="KF-XML-Metatype"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.kf_metatype"/>
      <p n="version" t="version" v="2.0.3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.metatype"/>
      <p n="uses" v="net.n3.nanoxml,org.knopflerfish.service.log,org.knopflerfish.util,org.kxml2.io,org.osgi.framework,org.osgi.service.cm,org.osgi.service.metatype,org.osgi.util.tracker,org.xmlpull.v1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="net.n3.nanoxml"/>
      <p n="version" t="version" v="2.2.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util.metatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util.metatype
    </require>
    <require extend="false" filter="(&amp;(package=org.kxml2.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.kxml2.io
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.metatype
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xmlpull.v1
    </require>
    <require extend="false" filter="(&amp;(package=net.n3.nanoxml)(version&gt;=2.2.1))" multiple="false" name="package" optional="false">
      Import package net.n3.nanoxml ;version=2.2.1
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.ksoap-osgi/2.0.0" presentationname="ksoap-osgi" symbolicname="org.knopflerfish.bundle.ksoap-osgi" uri="http://www.knopflerfish.org/repo/jars/ksoap-osgi/ksoap-osgi_all-2.0.0.jar" version="2.0.0">
    <description>
      kSOAP Server
    </description>
    <size>
      141668
    </size>
    <documentation>
      http://www.knopflerfish.org/remote_howto.html
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="ksoap-osgi"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.ksoap-osgi"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ksoap2"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ksoap2.serialization"/>
      <p n="uses" v="org.ksoap2"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ksoap2.transport"/>
      <p n="uses" v="org.ksoap2"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.ksoap"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.ksoap2)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2
    </require>
    <require extend="false" filter="(&amp;(package=org.ksoap2.serialization)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2.serialization
    </require>
    <require extend="false" filter="(&amp;(package=org.ksoap2.transport)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2.transport
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.ksoap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.ksoap
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.ksoap_remotefw/2.0.1" presentationname="kSOAP-FW" symbolicname="org.knopflerfish.bundle.ksoap_remotefw" uri="http://www.knopflerfish.org/repo/jars/ksoap_remotefw/ksoap_remotefw_all-2.0.1.jar" version="2.0.1">
    <description>
      kSOAP remote framework
    </description>
    <size>
      60435
    </size>
    <documentation>
      http://www.knopflerfish.org/remote_howto.html
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="kSOAP-FW"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.ksoap_remotefw"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.soap.remotefw"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.ksoap2)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2
    </require>
    <require extend="false" filter="(&amp;(package=org.ksoap2.serialization)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2.serialization
    </require>
    <require extend="false" filter="(&amp;(package=org.ksoap2.transport)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.ksoap2.transport
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.remotefw)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.remotefw
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.soap.remotefw)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.soap.remotefw
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.kxml-LIB/1.0.1" presentationname="kXML-LIB" symbolicname="org.knopflerfish.bundle.kxml-LIB" uri="http://www.knopflerfish.org/repo/jars/kxml/kxml-1.0.1.jar" version="1.0.1">
    <description>
      kXML (LIB)
    </description>
    <size>
      55467
    </size>
    <documentation>
      http://www.kxml.org
    </documentation>
    <category id="lib"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="kXML-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.kxml-LIB"/>
      <p n="version" t="version" v="1.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xmlpull.v1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.kxml2.io"/>
      <p n="uses" v="org.xmlpull.v1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.kxml2.kdom"/>
      <p n="uses" v="org.xmlpull.v1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.kxml2.wap"/>
      <p n="uses" v="org.xmlpull.v1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.kxml2.wap.syncml"/>
      <p n="uses" v="org.kxml2.wap"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.logcommands-IMPL/2.0.0" presentationname="LogCommands-IMPL" symbolicname="org.knopflerfish.bundle.logcommands-IMPL" uri="http://www.knopflerfish.org/repo/jars/logcommands/logcommands-2.0.0.jar" version="2.0.0">
    <description>
      Log commands (IMPL)
    </description>
    <size>
      13221
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="LogCommands-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.logcommands-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.measurement-LIB/2.0.0" presentationname="measurement-LIB" symbolicname="org.knopflerfish.bundle.measurement-LIB" uri="http://www.knopflerfish.org/repo/jars/measurement/measurement-2.0.0.jar" version="2.0.0">
    <description>
      Measurement API (LIB)
    </description>
    <size>
      9064
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="measurement-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.measurement-LIB"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.util.measurement"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.metatype-LIB/2.0.0" presentationname="metatype-LIB" symbolicname="org.knopflerfish.bundle.metatype-LIB" uri="http://www.knopflerfish.org/repo/jars/metatype/metatype-2.0.0.jar" version="2.0.0">
    <description>
      Metatype API (LIB)
    </description>
    <size>
      4912
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="metatype-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.metatype-LIB"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.metatype"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.oscar-shell/1.0.1" presentationname="oscar-shell" symbolicname="org.knopflerfish.bundle.oscar-shell" uri="http://www.knopflerfish.org/repo/jars/oscar-shell/oscar-shell_all-1.0.1.jar" version="1.0.1">
    <description>
      Compatability layer for bundles using the Oscar shell API.
       See readme.txt for details.
    </description>
    <size>
      7846
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/oscar-shell/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="oscar-shell"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.oscar-shell"/>
      <p n="version" t="version" v="1.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ungoverned.osgi.service.shell"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.console
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.ungoverned.osgi.service.shell ;version=1.0.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.position-LIB/2.0.0" presentationname="position-LIB" symbolicname="org.knopflerfish.bundle.position-LIB" uri="http://www.knopflerfish.org/repo/jars/position/position-2.0.0.jar" version="2.0.0">
    <description>
      Position API (LIB)
    </description>
    <size>
      4165
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="position-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.position-LIB"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.util.position"/>
      <p n="uses" v="org.osgi.util.measurement"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.measurement)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.measurement
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.prefs/2.0.3" presentationname="prefs" symbolicname="org.knopflerfish.bundle.prefs" uri="http://www.knopflerfish.org/repo/jars/prefs/prefs_all-2.0.3.jar" version="2.0.3">
    <description>
      Preferences
    </description>
    <size>
      17615
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="prefs"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.prefs"/>
      <p n="version" t="version" v="2.0.3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.prefs"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.prefs ;version=1.1.0
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.remotefw-API/2.0.0" presentationname="RemoteFW-API" symbolicname="org.knopflerfish.bundle.remotefw-API" uri="http://www.knopflerfish.org/repo/jars/remotefw/remotefw_api-2.0.0.jar" version="2.0.0">
    <description>
      Remote Framework (API)
    </description>
    <size>
      1552
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/remotefw/readme.txt
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="RemoteFW-API"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.remotefw-API"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.remotefw"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.serialportdevice/2.0.0" presentationname="serialportdevice" symbolicname="org.knopflerfish.bundle.serialportdevice" uri="http://www.knopflerfish.org/repo/jars/serialportdevice/serialportdevice_all-2.0.0.jar" version="2.0.0">
    <description>
      Serial port device
    </description>
    <size>
      7144
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="serialportdevice"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.serialportdevice"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.serial"/>
      <p n="uses" v="javax.comm,org.osgi.service.device"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.comm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.comm
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.serial)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.serial
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.device)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.device
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.soap_demoservice/1.0.0" presentationname="soap_demoservice" symbolicname="org.knopflerfish.bundle.soap_demoservice" uri="http://www.knopflerfish.org/repo/jars/soap_demoservice/soap_demoservice_all-1.0.0.jar" version="1.0.0">
    <description>
      SOAP demo bundle
    </description>
    <size>
      5612
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="example"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="soap_demoservice"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.soap_demoservice"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.soap.demo1"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.soap.demo1)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.soap.demo1
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.soap_desktop-IMPL/2.0.0" presentationname="SOAP-desktop-IMPL" symbolicname="org.knopflerfish.bundle.soap_desktop-IMPL" uri="http://www.knopflerfish.org/repo/jars/soap_desktop/soap_desktop-2.0.0.jar" version="2.0.0">
    <description>
      SOAP Services desktop plugin (IMPL)
    </description>
    <size>
      52895
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="SOAP-desktop-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.soap_desktop-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.border)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.border
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.table)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.table
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.extensions
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.factory
    </require>
    <require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.wsdl.xml
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.client
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.soap_remotefw/2.0.0" presentationname="SOAP-FW" symbolicname="org.knopflerfish.bundle.soap_remotefw" uri="http://www.knopflerfish.org/repo/jars/soap_remotefw/soap_remotefw_all-2.0.0.jar" version="2.0.0">
    <description>
      SOAP remote framework
    </description>
    <size>
      37853
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="SOAP-FW"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.soap_remotefw"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.soap.remotefw"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.packageadmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.rpc
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.axis.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.axis.client
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.remotefw)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.remotefw
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.soap.remotefw)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.soap.remotefw
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.util
    </require>
    <require extend="false" filter="(&amp;(package=null)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package null
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.soapobject-IMPL/0.0.2" presentationname="soapobject-IMPL" symbolicname="org.knopflerfish.bundle.soapobject-IMPL" uri="http://www.knopflerfish.org/repo/jars/soapobject/soapobject-0.0.2.jar" version="0.0.2">
    <description>
      SOAP objects (IMPL)
    </description>
    <size>
      3880
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="experiment"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="soapobject-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.soapobject-IMPL"/>
      <p n="version" t="version" v="0.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.bundle.soapobject"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.sslj2sp-IMPL/2.0.0" presentationname="sslj2sp-IMPL" symbolicname="org.knopflerfish.bundle.sslj2sp-IMPL" uri="http://www.knopflerfish.org/repo/jars/sslj2sp/sslj2sp-2.0.0.jar" version="2.0.0">
    <description>
      SSL Provider using the J2 security architecture. (IMPL)
    </description>
    <size>
      17159
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/sslj2sp/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="sslj2sp-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.sslj2sp-IMPL"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.net.ssl
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.trayicon/2.0.1" presentationname="Tray-Icon-Manager" symbolicname="org.knopflerfish.bundle.trayicon" uri="http://www.knopflerfish.org/repo/jars/trayicon/trayicon_all-2.0.1.jar" version="2.0.1">
    <description>
      Windows Tray Icon manager. Uses code written by Jan Struyf,
       jan.struyf@cs.kuleuven.ac.be, http://jeans.studentenweb.org/java/trayicon/trayicon.html
    </description>
    <size>
      57753
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/trayicon/trayicon/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Tray-Icon-Manager"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.trayicon"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.trayicon"/>
      <p n="uses" v="javax.swing,org.osgi.framework"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.trayicon)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.trayicon
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing.event
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.trayicon_fw-IMPL/2.0.1" presentationname="FW-Tray-IMPL" symbolicname="org.knopflerfish.bundle.trayicon_fw-IMPL" uri="http://www.knopflerfish.org/repo/jars/trayicon_fw/trayicon_fw-2.0.1.jar" version="2.0.1">
    <description>
      Framework tray icon. Allows basic control of the framework
       using the windows system tray. (IMPL)
    </description>
    <size>
      9100
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/trayicon/trayicon_fw/readme.txt
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="FW-Tray-IMPL"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.trayicon_fw-IMPL"/>
      <p n="version" t="version" v="2.0.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.trayicon)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.trayicon
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=javax.swing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.swing
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.upnp-API/2.0.0" presentationname="upnp-API" symbolicname="org.knopflerfish.bundle.upnp-API" uri="http://www.knopflerfish.org/repo/jars/upnp/upnp_api-2.0.0.jar" version="2.0.0">
    <description>
      UPnP (API)
    </description>
    <size>
      5483
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="upnp-API"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.upnp-API"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.upnp"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.useradmin/2.0.2" presentationname="UserAdmin" symbolicname="org.knopflerfish.bundle.useradmin" uri="http://www.knopflerfish.org/repo/jars/useradmin/useradmin_all-2.0.2.jar" version="2.0.2">
    <description>
      User Administration Service
    </description>
    <size>
      40677
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="UserAdmin"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.useradmin"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.um.ipam"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.um.useradmin"/>
      <p n="uses" v="org.osgi.service.useradmin"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.useradmin"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.um.ipam)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.um.ipam
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.um.useradmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.event
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.useradmin)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.useradmin
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.util-LIB/2.0.0" presentationname="util-LIB" symbolicname="org.knopflerfish.bundle.util-LIB" uri="http://www.knopflerfish.org/repo/jars/util/util-2.0.0.jar" version="2.0.0">
    <description>
      Misc utilities (LIB)
    </description>
    <size>
      41297
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="util"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="util-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.util-LIB"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.sort"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.workerthread"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.util.framework"/>
      <p n="uses" v="org.knopflerfish.util,org.osgi.framework"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.xalan/2.7.1.1" presentationname="Xalan" symbolicname="org.knopflerfish.bundle.xalan" uri="http://www.knopflerfish.org/repo/jars/xalan/xalan-2.7.1.1.jar" version="2.7.1.1">
    <description>
      The Apache Xalan-Java XML transformer
    </description>
    <size>
      1804726
    </size>
    <documentation>
      http://xml.apache.org/xalan-j/
    </documentation>
    <copyright>
      http://www.apache.org/licenses/LICENSE-2.0
    </copyright>
    <category id="lib"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Xalan"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.xalan"/>
      <p n="version" t="version" v="2.7.1.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform"/>
      <p n="version" t="version" v="1.3.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.dom"/>
      <p n="uses" v="javax.xml.transform"/>
      <p n="version" t="version" v="1.3.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.sax"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.stream"/>
      <p n="version" t="version" v="1.3.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.stream"/>
      <p n="uses" v="javax.xml.transform"/>
      <p n="version" t="version" v="1.3.0.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xalan"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xalan.processor"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xpath.jaxp"/>
      <p n="uses" v="javax.xml.transform"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xalan)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xalan
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xalan.processor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xalan.processor
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xpath.jaxp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xpath.jaxp
    </require>
    <require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.naming
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.dom
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.sax
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.stream
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.xpath
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.parsers
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.serialize
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.serializer)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.serializer
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.events)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.events
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.traversal)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.traversal
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.xpath
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.ext
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.helpers
    </require>
    <require extend="false" filter="(&amp;(package=null)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package null
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.xerces/2.9.1" presentationname="Xerces-J" symbolicname="org.knopflerfish.bundle.xerces" uri="http://www.knopflerfish.org/repo/jars/xerces/xerces-2.9.1.jar" version="2.9.1">
    <description>
      The Apache Xerces2 Java XML parser
    </description>
    <size>
      1619405
    </size>
    <documentation>
      http://xerces.apache.org/xerces2-j/
    </documentation>
    <copyright>
      http://www.apache.org/licenses/LICENSE-2.0
    </copyright>
    <category id="lib"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="Xerces-J"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.xerces"/>
      <p n="version" t="version" v="2.9.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.datatype"/>
      <p n="uses" v="javax.xml.namespace"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.namespace"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.parsers"/>
      <p n="uses" v="javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.dom"/>
      <p n="uses" v="javax.xml.transform,org.w3c.dom"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.sax"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.stream,org.xml.sax,org.xml.sax.ext"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.transform.stream"/>
      <p n="uses" v="javax.xml.transform"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.validation"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.w3c.dom.ls,org.xml.sax"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.xml.xpath"/>
      <p n="uses" v="javax.xml.namespace,org.xml.sax"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.bootstrap"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.css"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.events"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.views"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.html"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.ls"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.events,org.w3c.dom.traversal"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.ranges"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.stylesheets"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.traversal"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.views"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.w3c.dom.xpath"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="3.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax.ext"/>
      <p n="uses" v="org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.xml.sax.helpers"/>
      <p n="uses" v="org.xml.sax"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.resolver"/>
      <p n="uses" v="javax.xml.parsers,org.apache.xml.resolver.helpers,org.apache.xml.resolver.readers"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.resolver.apps"/>
      <p n="uses" v="org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.apache.xml.resolver.tools,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.resolver.helpers"/>
      <p n="uses" v="javax.xml.transform,javax.xml.transform.sax,org.w3c.dom,org.xml.sax"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.resolver.readers"/>
      <p n="uses" v="javax.xml.parsers,org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.resolver.tools"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.transform,javax.xml.transform.sax,org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.2.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.serializer"/>
      <p n="uses" v="javax.xml.transform,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.html.dom"/>
      <p n="uses" v="org.apache.xerces.dom,org.w3c.dom,org.w3c.dom.html,org.xml.sax"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.wml"/>
      <p n="uses" v="org.w3c.dom"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.wml.dom"/>
      <p n="uses" v="org.apache.wml,org.apache.xerces.dom,org.w3c.dom"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.dom"/>
      <p n="uses" v="org.apache.xerces.dom.events,org.apache.xerces.dom3.as,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.apache.xml.serialize,org.w3c.dom,org.w3c.dom.events,org.w3c.dom.ls,org.w3c.dom.ranges,org.w3c.dom.traversal"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.dom.events"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.events,org.w3c.dom.views"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.dom3.as"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.ls"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.jaxp"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.validation,org.apache.xerces.dom,org.apache.xerces.jaxp.validation,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.jaxp.datatype"/>
      <p n="uses" v="javax.xml.datatype,javax.xml.namespace,org.apache.xerces.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.jaxp.validation"/>
      <p n="uses" v="javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.validation,org.apache.xerces.dom,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.parsers"/>
      <p n="uses" v="org.apache.xerces.dom,org.apache.xerces.dom3.as,org.apache.xerces.util,org.apache.xerces.xinclude,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xpointer,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.util"/>
      <p n="uses" v="javax.xml.namespace,javax.xml.parsers,org.apache.xerces.dom,org.apache.xerces.jaxp,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xml.resolver,org.apache.xml.resolver.readers,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xinclude"/>
      <p n="uses" v="org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xpointer"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xni"/>
      <p n="uses" v="org.apache.xerces.xni.parser"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xni.grammars"/>
      <p n="uses" v="org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xs"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xni.parser"/>
      <p n="uses" v="org.apache.xerces.xni"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xpointer"/>
      <p n="uses" v="org.apache.xerces.util,org.apache.xerces.xinclude,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xs"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xs"/>
      <p n="uses" v="org.w3c.dom,org.w3c.dom.ls"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xerces.xs.datatypes"/>
      <p n="uses" v="javax.xml.datatype,javax.xml.namespace,org.apache.xerces.xni,org.apache.xerces.xs"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.apache.xml.serialize"/>
      <p n="uses" v="org.apache.xerces.dom,org.apache.xerces.util,org.apache.xerces.xni,org.w3c.dom,org.w3c.dom.html,org.w3c.dom.ls,org.w3c.dom.traversal,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.datatype)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.datatype ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.namespace ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.dom ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.sax ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform.stream ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.transform ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.validation ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.xpath)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.xpath ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package javax.xml ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.html.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.html.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.wml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.wml
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.wml.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.wml.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.dom.events)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.dom.events
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.dom3.as)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.dom3.as
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.jaxp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.jaxp
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.jaxp.datatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.jaxp.datatype
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.jaxp.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.jaxp.validation
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.parsers
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.util
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xinclude)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xinclude
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xni)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xni
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xni.grammars)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xni.grammars
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xni.parser)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xni.parser
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xpointer)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xpointer
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xs)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xs
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xerces.xs.datatypes)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xerces.xs.datatypes
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.resolver.apps)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.resolver.apps ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.resolver.helpers)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.resolver.helpers ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.resolver.readers)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.resolver.readers ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.resolver.tools)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.resolver.tools ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.resolver)(version&gt;=1.2.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.resolver ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.serializer)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.serializer ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.bootstrap)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.bootstrap ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.css)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.css ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.events ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.html)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.html ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.ls)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.ls ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.ranges)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.ranges ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.stylesheets)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.stylesheets ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.traversal)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.traversal ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.views)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.views ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom.xpath)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom.xpath ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">
      Import package org.w3c.dom ;version=3.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.ext ;version=2.0.2
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.helpers ;version=2.0.2
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=2.0.2))" multiple="false" name="package" optional="false">
      Import package org.xml.sax ;version=2.0.2
    </require>
    <require extend="false" filter="(&amp;(package=sun.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package sun.io
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.xml.serialize
    </require>
  </resource>
  <resource id="org.knopflerfish.bundle.xml-LIB/2.0.0" presentationname="xml-LIB" symbolicname="org.knopflerfish.bundle.xml-LIB" uri="http://www.knopflerfish.org/repo/jars/xml/xml-2.0.0.jar" version="2.0.0">
    <description>
      XML (LIB)
    </description>
    <size>
      4703
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="api"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="xml-LIB"/>
      <p n="symbolicname" v="org.knopflerfish.bundle.xml-LIB"/>
      <p n="version" t="version" v="2.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.util.xml"/>
      <p n="uses" v="javax.xml.parsers,org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id="org.knopflerfish.log/2.0.2" presentationname="LogService" symbolicname="org.knopflerfish.log" uri="http://www.knopflerfish.org/repo/jars/log/log_all-2.0.2.jar" version="2.0.2">
    <description>
      The Knopflerfish OSGi log service
    </description>
    <size>
      36123
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id="service"/>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="LogService"/>
      <p n="symbolicname" v="org.knopflerfish.log"/>
      <p n="version" t="version" v="2.0.2"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.osgi.service.log"/>
      <p n="uses" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.3.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.knopflerfish.service.log"/>
      <p n="uses" v="org.osgi.framework,org.osgi.service.log"/>
      <p n="version" t="version" v="1.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.log ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">
      Import package org.knopflerfish.service.log ;version=1.1.0
    </require>
  </resource>
</repository>